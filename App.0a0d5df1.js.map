{"version":3,"sources":["../src/components/Loader/Loader.js","../src/components/Header/Operations.js","../src/API.js","../src/components/Header/Header.js","../src/components/Header/Banner.js","../src/components/About/About.js","../src/components/Cells/Cells.js","../src/components/News/News.js","../src/components/Academics/Academics.js","../src/components/Faculty/Faculty.js","../src/components/Students/Student.js","../src/components/ContactUs/Contacts.js","../src/App.js"],"names":["Loader","HeaderOperations","ChangeOnScroll","AddActiveClassOnScroll","sectionOneOptions","sectionOneObserver","IntersectionObserver","entries","setTimeout","headerOps","document","querySelector","forEach","entry","isIntersecting","classList","remove","add","rootMargin","navbar","observe","ScrollSmoothly","querySelectorAll","link","addEventListener","e","element","getElementById","getAttribute","substring","AddActiveClassOnClick","scrollIntoView","behavior","block","checked","getElementsByClassName","sections","observer","NavCheck","threshold","section","a_tag","target","id","currentActive","API","get","URL","Promise","resolve","reject","fetch","then","res","json","data","catch","error","console","log","Header","sectionId","headerDOM","html","header","Logo","CompanyName","toUpperCase","NavBarList","LinkName","slice","innerHTML","Banner","Section","Heading","SubHeading","Words","word","index","SmallLoader","About","aboutId","Information","info","Image","HOD","paragraph","aboutObserver","unobserve","LoadAbout","Cells","cellsId","IconsName","cell","Name","Paragraphs","Year","FacultyMembers","FacultyMember","Post","CurrentMembers","CurrentMember","Mobile","Address","Cell","Dept","University","City","Pincode","Email","Webpage","cellsObserver","LoadCells","News","newsId","buttonsId","Buttons","button","push","Id","Label","ButtonsClick","clickedButton","fileName","contains","split","newsInfo","_new","Content","ExternalLink","newsObserver","LoadButtons","Academics","academicsId","academicsInfo","Courses","course","Years","Course","Description","academicsObserver","LoadAcademics","Faculty","facultyId","facultyInfo","Staff","Teaching","teacher","Prefix","First","Middle","Last","Qualification","facultyObserver","LoadFaculty","Student","studentId","student","studentObserver","LoadStudent","Contact","contactId","contact","contactInfo","of","Queries","WorkingDays","Time","Phone","contactObserver","LoadContacts","banner","LoadData","LoadHeaderOperations","LoadContent"],"mappings":"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","file":"App.0a0d5df1.js","sourceRoot":"../public","sourcesContent":["export default class Loader {\n  \n\n  static LargeLoader() {\n    return `\n    <div id=\"preloader\">\n      <div id=\"main-ld\">\n        <div id=\"loader\">\n        </div>\n      </div>\n    </div>  `;\n        \n  }\n\n  static SmallLoader() {\n    return `\n    <div class=\"wrapper-loader\">\n      <div id=\"loading\"></div>\n    </div>\n    `;\n  }\n}\n","\nexport default class HeaderOperations {\n\n  static LoadHeaderOperations() {\n    HeaderOperations.ChangeOnScroll();\n    HeaderOperations.AddActiveClassOnScroll();\n  }\n\n  static ChangeOnScroll() {\n    const sectionOneOptions = {\n      rootMargin: \"-450px 0px 0px 0px\"\n    };\n\n    const sectionOneObserver = new IntersectionObserver(function(entries, sectionOneObserver){\n      \n      setTimeout(() => {\n        var headerOps = document.querySelector(\".header\");\n        if (headerOps == null)\n          return\n        entries.forEach(entry => {\n          if (!entry.isIntersecting) {\n            headerOps.classList.add(\"header-scrolled\");          \n          } else {\n            headerOps.classList.remove(\"header-scrolled\");      \n          }              \n        });\n      },\n      500);\n      \n      \n    }, sectionOneOptions);\n    const navbar = document.querySelector(\".navbar\");\n    sectionOneObserver.observe(navbar);\n    \n    HeaderOperations.ScrollSmoothly();\n  }\n\n  static ScrollSmoothly() {\n    setTimeout(()=>{\n      const navbarLinks = document.querySelectorAll(\"#home ul li a\");\n      navbarLinks.forEach(link => {\n        link.addEventListener(\"click\", (e) => {\n          const element = document.getElementById(link.getAttribute(\"data-link\").substring(1));\n          HeaderOperations.AddActiveClassOnClick(link);\n  \n          element.scrollIntoView({behavior:\"smooth\", block: \"start\"});\n          \n          document.getElementById(\"menu-btn\").checked = false;\n        });\n      })  \n    },500);\n    \n    \n  }\n\n  \n\n  static AddActiveClassOnClick(link) {\n    setTimeout(() => {\n      const currentActive = document.getElementsByClassName(\"active\")[0];\n      currentActive.classList.remove(\"active\");\n      link.classList.add(\"active\");\n    }, 1000)    \n    \n  }\n\n  static AddActiveClassOnScroll() {\n    const sections = document.querySelectorAll(\"section\");\n    const sectionOptions = {\n      rootMargin: \"0px 0px 0px 0px\",\n      threshold: 0.2\n    };\n  \n    const observer = new IntersectionObserver(HeaderOperations.NavCheck, sectionOptions);    \n   \n    sections.forEach(section => {\n      observer.observe(section);\n    })\n  }\n\n  static NavCheck(entries) {\n    setTimeout(()=> {\n      entries.forEach(entry => {\n\n        if (!entry.isIntersecting) {\n          return\n        }\n        else {\n          const a_tag = \"[data-link='#\" + entry.target.id + \"']\"; \n          const link = document.querySelector(a_tag);\n          const currentActive = document.getElementsByClassName(\"active\")[0];\n          if(currentActive != null)\n            currentActive.classList.remove(\"active\");\n          if (link != null)\n            link.classList.add(\"active\");\n         \n        }\n  \n      });\n    },500)\n  }\n\n}","export const API = {\n  get: function(URL) {\n    return new Promise((resolve, reject) => {\n      fetch(URL)\n      .then(res => res.json())\n      .then(data => {\n        resolve(data);\n      })\n\n      // you can add loader here      \n      .catch((error) => {\n        console.log(error);\n      })\n    });\n  }\n\n}\n\n","import {API} from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class Header {\n  constructor(){\n      this.URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Headers/\";\n      this.sectionId = \"home\";\n  }\n\n  LoadData() {\n     \n    const URL = this.URL + \"headers.json\";\n    const headerDOM = document.getElementById(this.sectionId);     \n    \n    let html = ``;\n    API.get(URL)\n    .then(header => {\n      html = `<div class=\"overlay\"></div> <header class=\"header\"> <a href=\"#\"><div class=\"logo\"><img src=\"${header.Logo}\" alt=\"Logo\"/><h3>${header.CompanyName.toUpperCase()}</h3></div></a><input class=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" /><label class=\"menu-icon\" for=\"menu-btn\"><span class=\"nav-icon\"></span></label><ul class=\"menu\">`;\n\n      header.NavBarList.forEach(link => {\n        const LinkName = link[0].toUpperCase() + link.slice(1)\n        html += `<li><a data-link=\"#${link}\">${LinkName}</a></li>`\n        \n      });    \n\n      html +=  `</ul></header>`;\n      \n      headerDOM.innerHTML = html; \n             \n    });\n        \n    //headerDOM.innerHTML = Loader.LargeLoader();\n\n  }\n}","import { API } from \"../../API\";\nimport Loader from '../Loader/Loader';\n\nexport default class Banner {\n  constructor() {\n    this.URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Headers/\";\n    this.sectionId = \"banner-container\";\n  }\n\n  LoadData() {\n    const URL = this.URL + \"banner.json\";\n    const Section = document.querySelector(\".banner-container\");\n    API.get(URL)\n    .then (data => {\n      var html = `    \n      <div class=\"heading\">\n        <h1 class=\"heading\">${data.Heading}</h1>\n      </div>\n      <div class=\"sub-heading\">`;\n\n      data.SubHeading.forEach(SubHeading => {\n        html += `<span>${SubHeading} </span>`;\n      });\n        \n      html += `<span class=\"cd-words-wrapper\">`;\n      data.Words.forEach((word, index) => {\n        if (index == 0) {\n          html += `<b class=\"is-visible\">${word}</b>`\n        } else {\n          html += `<b> ${word}</b>`;\n        }\n\n      })\n      html += `</span></div>`;\n      Section.innerHTML = html;\n    });\n    Section.innerHTML = Loader.SmallLoader();\n  }\n}","import { API } from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class About {\n  static LoadAbout() {\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/About/about.json\";\n    const aboutId = document.getElementById(\"about\");\n    API.get(URL)\n    .then(data => {\n      \n      var html = `\n      <div class=\"demo\">\n        <div class=\"message-box\">\n          <h3>${data.About.Heading}</h3>`;\n\n          data.About.Information.forEach((info) => {\n            html += `<p>${info}</p>`;\n          });\n          \n        html += `</div>\n        <div class=\"message-image float\">\n          <img src=\"${data.About.Image}\" alt=\"About\" />\n          <div class=\"black\"></div>\n        </div>\n      </div>`;\n\n\n      html += \n      `\n      <div class=\"hod-message message-box\">\n      <h3>${data.HOD.Heading}</h3>\n      `;\n\n      data.HOD.Information.forEach((paragraph) => {\n        html += `<p>${paragraph}</p>`;\n      })\n\n      \n      html += `</div>`\n\n      aboutId.innerHTML = html;\n\n    });\n    //aboutId.innerHTML = Loader.SmallLoader();\n  }\n\n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const aboutObserver = new IntersectionObserver((entries, aboutObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {            \n            aboutObserver.unobserve(entry.target);\n            About.LoadAbout();\n          }\n        });\n        \n      }, ISOptions);\n      aboutObserver.observe(document.getElementById(\"about\"));\n    }, 2000);\n  }\n}","import { API } from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class Cells {\n  static LoadCells() {\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Cells/cells.json\";\n    const cellsId = document.getElementById(\"cells\");\n    API.get(URL)\n    .then((data) => {\n      var html = \n      `\n      <div class=\"section-title text-center\">\n        <h3>${data.Heading}</h3>\n        <p>${data.SubHeading}</p>\n      </div>\n      `;\n      \n      const IconsName = [\"flaticon-seo\", \"flaticon-development\", \"flaticon-process\", \"flaticon-discuss-issue\", \"flaticon-idea\"];\n\n      html += ` <div class=\"main-section\">`;\n      \n      data.Cells.forEach((cell, index) => {\n        html +=\n        `\n        <div class=\"cells-container\">\n          <div class=\"services-inner-box\">\n            <div class=\"ser-icon\">\n              <i class=\"${IconsName[index]}\"></i>\n            </div>\n            <h2>${cell.Name}</h2>\n        `\n        cell.Information.Paragraphs.forEach((info) => {\n            html += `<p>${info}</p>`;\n        })\n        \n        html +=\n          `\n            <center>\n              <p>${cell.Name} ${data.Year}</p>\n            `;\n            cell.FacultyMembers.forEach((FacultyMember) => {\n                html += `<p><i class=\"fa fa-user\" aria-hidden=\"true\"></i> ${FacultyMember.Name} ${FacultyMember.Post}</p>`;\n            });\n            \n            \n            html += \n              `                    \n              <table>\n              `;\n            cell.CurrentMembers.forEach((CurrentMember) => {\n              html += `\n              <tr>\n                  <td><p><i class=\"fa fa-user\" aria-hidden=\"true\"></i> ${CurrentMember.Name}</p></td>\n                  <td><p>${CurrentMember.Mobile}</p></td>\n              </tr>\n              `;\n            });\n\n          html +=    \n          `\n            </table>\n            </center>\n            <p><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i></p>\n            <p>${cell.Address.Cell}</p>\n            <p>${cell.Address.Dept}</p>\n            <p>${cell.Address.University}</p>\n            <p>${cell.Address.City}- ${cell.Address.Pincode}</p>\n            <p><i class=\"fa fa-phone-square\" aria-hidden=\"true\"></i> ${cell.Mobile}</p>\n            <p><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> <a href=\"mailto:${cell.Email}\">${cell.Email}</a></p>\n\n            <div class=\"date\">\n              <span><a target=\"_blank\" href=\"${cell.Webpage}\"><i class=\"fa fa-external-link-square\" aria-hidden=\"true\"></i></a></span>\n            </div>\n          </div>\n        </div>\n      \n        `;\n      });\n\n      cellsId.innerHTML = html;\n    })\n    //cellsId.innerHTML = Loader.SmallLoader();\n  }\n\n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const cellsObserver = new IntersectionObserver((entries, cellsObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {            \n            cellsObserver.unobserve(entry.target);\n            Cells.LoadCells();\n          }\n        });\n        \n      },ISOptions);\n      cellsObserver.observe(document.getElementById(\"cells\"));\n    }, 2000);\n  }\n}","import { API } from '../../API';\nimport Loader from '../Loader/Loader';\n\nexport default class News {\n  static LoadButtons() {\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/News/buttons.json\";\n    const newsId = document.getElementById(\"news\");\n    let buttonsId = [];\n    API.get(URL)\n    .then((data) => {\n      var html = \n      `\n      <div class=\"section-title text-center\">\n        <h3>${data.Heading}</h3>\n      </div>\n      <div class=\"news-buttons\">\n      <button id=\"all\" class=\"active\">All</button>\n      \n      `\n      ;\n      data.Buttons.forEach((button) => {\n        buttonsId.push(button.Id)\n        html += `<button id=\"${button.Id}\">${button.Label}</button>`;\n      });\n      \n      html += `</div><div class=\"main-section\"></div>`;\n      setTimeout(() => {\n        newsId.innerHTML = html;\n        News.ButtonsClick(buttonsId);\n      }, 1000)\n      \n    });\n    //newsId.innerHTML = Loader.SmallLoader();\n    \n  }\n\n  static ButtonsClick(buttonsId) {\n    buttonsId.forEach((button) => {\n      document.getElementById(button).addEventListener(\"click\", (clickedButton) => {\n        let fileName = clickedButton.target.getAttribute(\"id\");\n        if(clickedButton.target.classList.contains(\"active\"))\n          return;\n        fileName = fileName.split(\"Button\")[0]\n        \n        const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/News/\"+fileName+\".json\";\n        const newsId = document.querySelector(\"#news\");\n        const newsInfo = newsId.getElementsByClassName(\"main-section\")[0];\n        \n\n        API.get(URL)\n        .then((data) => {\n          \n          let html = ``;\n          data.News.forEach((_new) => {\n            html += \n            `\n            <div class=\"news-container\">\n              <img src=\"${data.Image}\" alt=\"Image\">\n      \n              <div class=\"img-overlay\">\n      \n                <div class=\"text\">\n                  <h1>${_new.Heading}</h1>\n                  <p>${_new.Content}</p>\n                </div>\n      \n                <div class=\"ext-link\">\n                  <span><a target=\"_blank\" href=\"${_new.ExternalLink}\"><i class=\"fa fa-external-link-square\" aria-hidden=\"true\"></i></a></span>\n                </div>\n      \n              </div> <!-- img-overlay end -->\n            </div>\n            `;\n          });\n\n          \n          const newsId = document.querySelector(\"#news\");\n          const newsInfo = newsId.getElementsByClassName(\"main-section\")[0];\n          newsInfo.innerHTML = html;\n          document.querySelectorAll(\"#news .news-buttons button\").forEach((button) => {\n            if(button.classList.contains(\"active\")) {\n              button.classList.remove(\"active\");\n            }\n          });\n          \n          clickedButton.target.classList.add(\"active\");\n          \n        });\n\n        newsInfo.innerHTML = Loader.SmallLoader();\n        \n      })\n    });\n  }\n\n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const newsObserver = new IntersectionObserver((entries, newsObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {\n            newsObserver.unobserve(entry.target);\n            News.LoadButtons();\n          }\n        });\n        \n      }, ISOptions);\n      newsObserver.observe(document.getElementById(\"news\"));\n    }, 2000);\n  }\n\n}","import { API } from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class Academics {\n  static LoadAcademics() {\n    const academicsId = document.getElementById(\"academics\");\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Academics/academics.json\";\n    let html = ``;\n    \n    API.get(URL)\n    .then((data) => {\n      html += \n      `\n      <div class=\"section-title text-center\">\n        <h3>${data.Heading}</h3>    \n      </div>;\n      `;\n      //html += `<div class=\"main-section\">`;\n      html += `<div class=\"main-section\"></div>`;\n      academicsId.innerHTML = html;\n\n      const academicsInfo = document.querySelector(\"#academics .main-section\");\n      \n      html = ``;\n      \n      data.Courses.forEach((course) => {\n        html += \n        `\n        <div class=\"post-box\">\n        <div class=\"post-thumb\">\n          <img src=\"${course.Image}\" class=\"img-fluid\" alt=\"post-img\" />\n          <div class=\"date\">\n            <span>${course.Years}</span>\n            <span>Years Course</span>\n          </div> \n        </div>\n        <div class=\"post-info\">\n          <h4>${course.Course}</h4>\n          <p>${course.Description}</p>\n        </div>\n      </div>\n        `\n      });\n      \n      academicsInfo.innerHTML = html;\n      \n    })\n\n    //academicsId.innerHTML = Loader.SmallLoader();\n\n  }\n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const academicsObserver = new IntersectionObserver((entries, academicsObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {\n            academicsObserver.unobserve(entry.target);\n            Academics.LoadAcademics();\n          }\n        });\n        \n      }, ISOptions);\n      academicsObserver.observe(document.getElementById(\"academics\"));\n    }, 2000);\n  }\n}","import { API } from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class Faculty {\n  static LoadFaculty() {\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Faculty/faculty.json\";\n    let html = ``;\n    const facultyId = document.getElementById(\"faculty\");\n\n    API.get(URL)\n    .then((data) => {\n      html += \n      `\n      <div class=\"section-title text-center\">\n        <h3>${data.Heading}</h3>    \n      </div>\n      ` ;\n      html += `<div class=\"main-section\"></div>`; \n      facultyId.innerHTML = html;\n      const facultyInfo = document.querySelector(\"#faculty .main-section\");\n      html = ``;\n\n      data.Staff.Teaching.forEach((teacher) => {\n        html += \n        `\n        <div class=\"our-team\">\n        <div class=\"pic\">\n          <img src=\"${teacher.Image}\" alt=\"Image\">\n        </div>\n        <div class=\"team-content\"><h3 class=\"title\">`;\n\n        \n        if (teacher.Name.Prefix != \"\") {\n          html += teacher.Name.Prefix + \". \";\n        }\n        html += teacher.Name.First + (teacher.Name.Middle ? \" \" + teacher.Name.Middle + \". \":  \" \") + teacher.Name.Last;\n          \n        html +=  `</h3>\n          <span class=\"post\">\n            <ul>\n              <li>${teacher.Post}</li>`;\n            \n        if (teacher.Qualification != \"\") {\n          html += `<li>${teacher.Qualification}</li>`;\n        }\n        \n        html +=\n          `  <li>\n                <div class=\"date\">\n                  <span><a target=\"_blank\" href=\"${teacher.Webpage}\"><i class=\"fa fa-external-link-square\" aria-hidden=\"true\"></i></a></span>\n                </div>\n              </li>\n            </ul>\n          </span>\n        </div>\n      </div>\n        `;        \n      })\n      facultyInfo.innerHTML = html;\n    })\n\n    //facultyId.innerHTML = Loader.SmallLoader();\n  }\n\n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const facultyObserver = new IntersectionObserver((entries, facultyObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {\n            facultyObserver.unobserve(entry.target);\n            Faculty.LoadFaculty();\n          }\n        });\n        \n      }, ISOptions);\n      facultyObserver.observe(document.getElementById(\"faculty\"));\n    }, 2000);\n  }\n}","import { API } from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class Student {\n  static LoadStudent() {\n    const studentId = document.getElementById(\"students\");\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Students/students.json\";\n\n    API.get(URL)\n    .then((student) => {\n      let html = \n      `\n      <div class=\"student-attributes\">\n        <div class=\"section-title text-center\">\n          <h3>${student.Heading}</h3>\n        </div>\n        <div class=\"student-section\">\n          <p> ${student.Description}\n            <span><a target=\"_blank\" href=\"${student.Webpage}\"><i class=\"fa fa-external-link-square\" aria-hidden=\"true\"></i></a></span>\n          </p>\n        </div>\n      </div>\n      `;\n\n      studentId.innerHTML = html;\n\n    });\n    //studentId.innerHTML = Loader.SmallLoader();\n  }\n\n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const studentObserver = new IntersectionObserver((entries, studentObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {\n            studentObserver.unobserve(entry.target);\n            setTimeout(Student.LoadStudent(), 5000);\n            \n          }\n        });\n        \n      }, ISOptions);\n      studentObserver.observe(document.getElementById(\"students\"));\n    }, 2000);\n  }\n}","import { API } from '../../API';\n//import Loader from '../Loader/Loader';\n\nexport default class Contact {\n  static LoadContacts() {\n    const URL = \"https://shubham1010.github.io/jsonfiles/pucsd/Contact/contact.json\";\n    const contactId = document.getElementById(\"contact\");\n    let html = ``;\n    API.get(URL)\n    .then((contact) => {\n      html += \n      `\n      <div class=\"section-title text-center\">\n        <h3>${contact.Heading}</h3>    \n      </div>;\n      `;\n      //html += `<div class=\"main-section\">`;\n      html += `<div class=\"grid-col-2 decorate\"></div>`;\n      contactId.innerHTML = html;\n\n      const contactInfo = document.querySelector(\"#contact .decorate\");\n      \n      html = ``;\n      \n      contact.Information.forEach((of) => {\n        html += \n        `\n        <div>\n          <ul>\n            <li><h2>${of.Queries}</h2></li>\n            <li>\n              <table>\n                <tr>\n                  <td><h3>Working Days: </h3></td>\n                  <td><h3>${of.WorkingDays}</h3></td>\n                </tr>\n\n                <tr>\n                  <td><h3><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i><h3></td>\n                  <td><h3>${of.Time}</h3></td>\n                </tr>\n\n                <tr>\n                  <td><h3><i class=\"fa fa-phone-square\" aria-hidden=\"true\"></i></h3></td>\n                  <td><h3>${of.Phone}</h3></td>\n                </tr>\n                <tr>\n                  <td><h3><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></h3></td>\n                  <td><h3><a href=\"mailto:${of.Email}\">${of.Email}</a></h3></td>\n                </tr>\n              </table>\n            </li>\n          </ul>\n        </div>\n        `\n      });\n      \n      contactInfo.innerHTML = html;\n    });\n    //contactId.innerHTML = Loader.SmallLoader();\n  }\n  \n  static LoadContent() {\n    setTimeout(() => {\n      const ISOptions = {\n        threshold: 0.8,\n        rootMargin: \"0px 0px 0px 0px\"\n      }\n      const contactObserver = new IntersectionObserver((entries, contactObserver) => {\n        entries.forEach((entry)=> {\n          if(entry.isIntersecting) {\n            contactObserver.unobserve(entry.target);\n            setTimeout(Contact.LoadContacts(), 10000);\n          }\n        });\n        \n      }, ISOptions);\n      contactObserver.observe(document.getElementById(\"contact\"));\n    }, 2000);\n  }\n}","import './css/main.css';\nimport Loader from './components/Loader/Loader';\nimport HeaderOperations from './components/Header/Operations';\nimport Header from './components/Header/Header';\nimport Banner from './components/Header/Banner';\nimport About from './components/About/About';\nimport Cells from './components/Cells/Cells';\nimport News from './components/News/News';\nimport Academics from './components/Academics/Academics';\nimport Faculty from './components/Faculty/Faculty';\nimport Student from './components/Students/Student';\nimport Contact from './components/ContactUs/Contacts';\n\n\n\nconst header = new Header();\nconst banner = new Banner();\n\n\nheader.LoadData();\nbanner.LoadData();\n\n//Loader.LoadMainHeader()\nHeaderOperations.LoadHeaderOperations();\n\n\nAbout.LoadContent();\nCells.LoadContent();\nNews.LoadContent();\nAcademics.LoadContent();\nFaculty.LoadContent();\nStudent.LoadContent();\nContact.LoadContent();\n\n\n\n"]}